{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","quote","setQuote","author","setAuthor","setRandomNumber","quotesArray","setQuotesArray","fetchQuotes","url","a","fetch","response","json","parsedJSON","quotes","console","log","useEffect","className","id","src","href","alt","onClick","randomInteger","Math","floor","length","random","getRandomQuote","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAsDeA,MAjDf,WACE,MAAyBC,mBAAS,gFAAlC,mBAAMC,EAAN,KAAaC,EAAb,KACA,EAA2BF,mBAAS,kBAApC,mBAAMG,EAAN,KAAcC,EAAd,KACA,EAA2BJ,mBAAS,GAA5BK,EAAR,oBACA,EAAqCL,mBAAS,MAA9C,mBAAMM,EAAN,KAAmBC,EAAnB,KAEMC,EAAW,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACKC,MAAMF,GADX,cACZG,EADY,gBAEOA,EAASC,OAFhB,OAEZC,EAFY,OAGlBP,EAAeO,EAAWC,QAC1BC,QAAQC,IAAIH,GAJM,2CAAH,sDAkBjB,OAXAI,qBAAU,WACRV,EAhBa,4IAiBZ,IAUD,qBAAKW,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,sBAAKC,GAAG,YAAR,UACE,oBAAGA,GAAG,OAAN,UACE,+BACA,qBAAKC,IAAI,uEAERpB,EAJH,OAMA,oBAAGmB,GAAG,SAAN,eACKjB,KAEL,sBAAKiB,GAAG,gBAAR,UACA,mBAAGE,KAAK,2BAA2BF,GAAG,cAAtC,SACE,qBAAKC,IAAI,uDAAuDD,GAAG,kBAAkBG,IAAI,mBAEzF,wBAAQH,GAAG,YAAYI,QAAS,kBAxBnB,WACrB,IAAIC,EAAgBC,KAAKC,MAAMrB,EAAYsB,OAAOF,KAAKG,UACvDxB,EAAgBoB,GAChBvB,EAASI,EAAYmB,GAAexB,OACpCG,EAAUE,EAAYmB,GAAetB,QAoBO2B,IAApC,mCClCGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.262b436f.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.scss';\n\nlet quoteDBUrl = 'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json'\n\nfunction App() {\n  const[quote, setQuote] = useState('Happiness is not what you will achieve, its all about what you already have!');\n  const[author, setAuthor] = useState(\"hussain hafeez\");\n  const[, setRandomNumber] = useState(0);\n  const[quotesArray, setQuotesArray] = useState(null);\n\n  const fetchQuotes = async (url) => {\n    const response = await fetch(url)\n    const parsedJSON = await response.json()\n    setQuotesArray(parsedJSON.quotes)\n    console.log(parsedJSON)\n    }\n  \n  useEffect(() => {\n    fetchQuotes(quoteDBUrl)\n  }, [])\n\n  const getRandomQuote = () =>{\n    let randomInteger = Math.floor(quotesArray.length*Math.random())\n    setRandomNumber(randomInteger)\n    setQuote(quotesArray[randomInteger].quote)\n    setAuthor(quotesArray[randomInteger].author)\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div id=\"quote-box\">\n          <p id=\"text\">\n            <span>\n            <img src=\"https://img.icons8.com/material-rounded/24/000000/quote-left.png\"/>\n            </span>\n            {quote}\"\n          </p>\n          <p id=\"author\">\n            ~ {author}\n          </p>\n          <div id=\"clickable-box\">\n          <a href=\"twitter.com/intent/tweet\" id=\"tweet-quote\" >\n            <img src=\"https://img.icons8.com/fluency/48/000000/twitter.png\" id=\"tweet-quote-img\" alt=\"twitter icon\"/>\n            </a>\n            <button id=\"new-quote\" onClick={()=>getRandomQuote()}>Next Quote</button>\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}